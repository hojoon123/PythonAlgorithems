n = int(input())

arr = [1,
 1,
 2,
 5,
 14,
 42,
 132,
 429,
 1430,
 4862,
 16796,
 58786,
 208012,
 742900,
 2674440,
 9694845,
 35357670,
 129644790,
 477638700,
 1767263190,
 6564120420,
 24466267020,
 91482563640,
 343059613650,
 1289904147324,
 4861946401452,
 18367353072152,
 69533550916004,
 263747951750360,
 1002242216651368,
 3814986502092304,
 14544636039226909,
 55534064877048198,
 212336130412243110,
 812944042149730764,
 3116285494907301262]
print(arr[n])
    
'''

(x+1, y), (x, y+1), (x-1, y), (x, y-1)
상하좌우 탐색
자리 마다 
미로의 크기를 나타내는 가로 크기 M, 세로 크기 N (1 ≤ N, M ≤ 100)
0은 빈 방을 의미하고, 1은 벽
(1, 1)과 (N, M)은 항상 뚫려있다
알고스팟 운영진이 (N, M)으로 이동하기 위해 벽을 최소 몇 개 부수어야 하는지 출력


0, 0 부터 시작해서 상하좌우 탐색
각 자리 마다 카운트로 체크 1이면 cnt + 1
0이면 cnt 도착점에 도달했을 때 왼쪽 오른쪽 중 cnt가 가장 적은 곳을 출력
if 다음 위치 == 1 
    다음위치 = 현재위치 + 1

예제 입력 1 
3 3
011
111
110
예제 출력 1 
3
예제 입력 2 
4 2
0001
1000
예제 출력 2 
0
'''