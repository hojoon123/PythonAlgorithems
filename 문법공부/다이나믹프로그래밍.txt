다이나믹 프로그래밍
모든 알고리즘은 기존의 문제를 해결하기 위해서 고안 됨
완전탐색 ,BFS, DFS 와 같이 수많은 경우의 수를 전부 따져봐야 하는데
경우의 수가 너무 많을 때 속도가 느려지는 것을 개선해서
수행 시간을 단축하고자 만들어짐

메모리를 사용해서 중복 연산을 줄이고
중복 연산을 줄여서 수행 속도를 개선한다

오 그냥 DP 삼각형 하나 더 만들고 거기다가 채워넣으면서
어차피 메모리는 썩어나니까
속도 개선 굿
그래서 메이플 메모리가 그렇게 쳐 늘어나고 있었던 거구나 아이고

다이나믹 프로그래밍 = 기억하기 알고리즘 기억하며 풀기임


다이나믹 프로그래밍 문제를 알아보고 구분하는 방법

1.DFS / BFS 로 풀 수 있지만, 경우의 수가 존나 많아 보이는 문제
최악의 경우의 수가 개 많아 보일 때
삼각형 최대값 문제 레전드긴하네 ㅋㅋ
DFS로 풀면 2n ㄷㄷ; DFS 마지노선은 대충 500만개 쯤 5 * 10^6

경우의 수들의 중복적인 값이 많은 경우



문제 해결 접근 방법
30분 동안 어떻게 하면 뒤로 돌아가지 않을까 고민 때리고
풀이 빠딱빠딱 보며 넘기기

개발자로 살아남기 형 영상 까먹으면 다시 보기
221122_BJODP / BJO1463.py 상향식 풀이
221122_BJODP / BJO1463 copy.py 하향식 풀이
